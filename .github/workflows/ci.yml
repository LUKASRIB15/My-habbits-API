name: "CI"

on:
  push:

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: e2e-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js | Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install pnpm manager
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install 

      - name: Run Unit Tests
        run: pnpm run test

      - name: Generate Tag
        id: generate_tag
        run: |
          SHA=$(echo ${GITHUB_SHA} | cut -c1-7)
          echo "sha=${SHA}" >> $GITHUB_OUTPUT

      - name: Login with Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build to Docker Hub
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: lukasrib15dev/my-habbits:${{ steps.generate_tag.outputs.sha }},lukasrib15dev/my-habbits:latest
  
  e2e-tests:
      name: End-to-End Tests 
      runs-on: ubuntu-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Node.js | Node 20
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Install pnpm manager
          run: npm install -g pnpm

        - name: Install dependencies
          run: pnpm install

        - name: Instalar Docker Compose 
          run: |
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

        - name: Up Services in Docker compose
          run: docker-compose up -d

        - name: Generate Prisma Client
          env:
            DATABASE_URL: postgresql://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@localhost:5432/${{ secrets.DATABASE_NAME }}?schema=public
          run: pnpm prisma generate

        - name: Run Migrations
          env:
            DATABASE_URL: postgresql://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@localhost:5432/${{ secrets.DATABASE_NAME }}?schema=public
          run: pnpm prisma migrate deploy

        - name: Run End-to-End Tests on the Docker Image  # Executa testes E2E na imagem gerada
          run: |
            pnpm run test:e2e
            docker-compose down